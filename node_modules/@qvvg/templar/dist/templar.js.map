{"version":3,"file":"templar.js","sources":["../src/templar.js"],"sourcesContent":["export const interleave = (a = [], b = [], c = []) => {\n  if (!a.length && !b.length) return c\n  if (!a.length) return c\n  if (!b.length) return [...c, a[0]]\n\n  const [aHead, ...aRest] = a\n  const [bHead, ...bRest] = b\n\n  if (aHead !== undefined) c.push(aHead)\n  if (bHead !== undefined) c.push(bHead)\n\n  return interleave(aRest, bRest, c)\n}\n\nconst recApply = d => arg1 => {\n  if (typeof arg1 === \"function\") return recApply(d)(arg1(d))\n  if (typeof arg1 === \"string\") return arg1\n  return \"\"\n}\n\nexport const t7l = (head, ...rest) => {\n  if (typeof head === \"string\") return () => head\n  if (Array.isArray(head)) {\n    return d =>\n      interleave(head, rest.map(recApply(d)))\n        .join(\"\")\n        .trim()\n  }\n  return head\n}\n"],"names":["interleave","a","b","c","length","aHead","undefined","push","bHead","aRest","bRest","recApply","d","arg1","head","Array","isArray","rest","map","join","trim"],"mappings":"IAAaA,WAAcC,EAAQC,EAAQC,qBAAZ,mBAAQ,mBAAQ,KACxCF,EAAEG,SAAWF,EAAEE,OAAQ,OAAOD,MAC9BF,EAAEG,OAAQ,OAAOD,MACjBD,EAAEE,OAAQ,OAAWD,UAAGF,EAAE,KAExBI,wDAGOC,IAAVD,GAAqBF,EAAEI,KAAKF,QAClBC,IAAVE,GAAqBL,EAAEI,KAAKC,GAEzBR,EAAWS,EAAOC,EAAOP,IAG5BQ,WAAWC,mBAAKC,SACA,mBAATA,EAA4BF,EAASC,EAATD,CAAYE,EAAKD,IACpC,iBAATC,EAA0BA,EAC9B,+CAGWC,uEACE,iBAATA,oBAAgCA,GACvCC,MAAMC,QAAQF,YACTF,UACLZ,EAAWc,EAAMG,EAAKC,IAAIP,EAASC,KAChCO,KAAK,IACLC,QAEAN"}