{"version":3,"file":"sdk.modern.js","sources":["../src/build/index.js","../src/resolve/index.js","../src/build/authorizations.js","../src/build/get-account.js","../src/build/get-events.js","../src/build/get-latest-block.js","../src/build/get-transaction-status.js","../src/build/limit.js","../src/build/params.js","../src/build/proposer.js","../src/build/payer.js","../src/build/ping.js","../src/build/ref.js","../src/build/script.js","../src/build/transaction.js","../src/resolve/resolve-authorizations.js","../src/resolve/resolve-params.js"],"sourcesContent":["import {pipe, interaction} from \"@onflow/interaction\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","import {pipe} from \"@onflow/interaction\"\n\nexport const resolve = pipe\n","import {pipe, put} from \"@onflow/interaction\"\n\nexport function authorizations(ax = []) {\n  return pipe([put(\"tx.authorizations\", ax)])\n}\n\nexport function authorization(acct, signFn, keyId) {\n  return {acct, signFn, keyId}\n}\n","import {pipe, makeGetAccount, Ok} from \"@onflow/interaction\"\n\nexport function getAccount(acct) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.acct = acct\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"@onflow/interaction\"\n\nexport function getEvents(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.eventType = eventType\n      return Ok(ix)\n    },\n    ix => {\n      ix.bounds.start = start\n      return Ok(ix)\n    },\n    ix => {\n      ix.bounds.end = end\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"@onflow/interaction\"\n\nexport function getLatestBlock(isSealed = false) {\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"@onflow/interaction\"\n\nexport function getTransactionStatus(txId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.txId = txId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok} from \"@onflow/interaction\"\n\nexport function limit(limit) {\n  return pipe([\n    ix => {\n      ix.payload.limit = limit\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, put} from \"@onflow/interaction\"\n\nfunction toMap(kv = []) {\n  return kv\n    .filter(d => d.key != null)\n    .reduce((acc, d) => ({...acc, [d.key]: d.value}), {})\n}\n\nexport function params(px = []) {\n  return pipe([put(\"ix.params\", toMap(px))])\n}\n\nconst identity = {\n  asParam: v => v,\n  asInjection: v => v,\n}\n\nexport function param(value, xform = identity, key = null) {\n  return {key, value, xform}\n}\n","import {pipe, put, Ok} from \"@onflow/interaction\"\n\nexport async function proposer(...args) {\n  let prop = null\n  if (typeof args[0] === \"function\") prop = await args[0]()\n  if (typeof args[0] === \"object\") prop = args[0]\n  const [addr, keyId, sequenceNum] = args\n  return pipe([\n    ix => {\n      ix.proposer = prop || proposalKey(addr, keyId, sequenceNum)\n      return Ok(ix)\n    },\n  ])\n}\n\nfunction proposalKey(addr, keyId, sequenceNum) {\n  return {addr, keyId, sequenceNum}\n}\n","import {pipe, put} from \"@onflow/interaction\"\n\nexport function payer(authz) {\n  return pipe([\n    put(\"tx.payer\", authz)\n  ])\n}\n","import {pipe, makePing} from \"@onflow/interaction\"\n\nexport function ping() {\n  return pipe([makePing])\n}\n","import {pipe, Ok} from \"@onflow/interaction\"\n\nexport function ref(ref) {\n  return pipe([\n    ix => {\n      ix.payload.ref = ref\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"@onflow/interaction\"\nimport {t7l} from \"@qvvg/templar\"\n\nexport function script(...args) {\n  return pipe([makeScript,\n    put(\"ix.code\", t7l(...args)),\n  ])\n}\n","import {pipe, put, Ok, update, makeTransaction} from \"@onflow/interaction\"\nimport {t7l} from \"@qvvg/templar\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\n// NOTE: nonces are changing, this will work for\n//       the way the current emulator works\nfunction nonce() {\n  return Date.now()\n}\n\nfunction hammer(fallback) {\n  return function(value) {\n    return value == null ? fallback : value\n  }\n}\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.code\", t7l(...args)),\n    ix => {\n      ix.payload.limit = ix.payload.limit || DEFAULT_COMPUTE_LIMIT\n      ix.payload.nonce = ix.payload.nonce || nonce()\n      ix.payload.ref = ix.payload.ref || DEFUALT_REF\n      return Ok(ix)\n    },\n    update(\"tx.authorizations\", hammer(DEFAULT_SCRIPT_ACCOUNTS))\n  ])\n}\n","import {Ok, isTransaction, get} from \"@onflow/interaction\"\nimport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n} from \"@onflow/encode\"\n\nconst ERROR_MINIMUM_AUTHORIZATIONS =\n  \"Transactions require at least one authoriztion\"\n\nfunction buildAuthorization(acct, signature, keyId) {\n  return {acct, signature, keyId}\n}\n\nfunction isFn(v) {\n  return typeof v === \"function\"\n}\n\nfunction isArray(v) {\n  return Array.isArray(v)\n}\n\nexport async function resolveAuthorizations(ix) {\n  if (!isTransaction(ix)) return Ok(ix)\n\n  const transactionPayload = encodeTransactionPayload({\n    script: ix.payload.code,\n    refBlock: ix.payload.ref || null,\n    gasLimit: ix.payload.limit,\n    proposalKey: {\n      address: ix.proposer.addr,\n      keyId: ix.proposer.keyId,\n      sequenceNum: ix.proposer.sequenceNum,\n    },\n    payer: get(ix, \"tx.payer\").acct,\n    authorizers: get(ix, \"tx.authorizations\").map(a => a.acct),\n  })\n\n  const axs = get(ix, \"tx.authorizations\", []).map(\n    async function resolveAuthorization(authz) {\n      if (isFn(authz)) authz = await authz()\n      if (authz.acct === get(ix, \"tx.payer\").acct)\n        return buildAuthorization(authz.acct, null, authz.keyId)\n      const authzSignature = await authz.signFn({\n        message: transactionPayload,\n        addr: authz.acct,\n        keyId: authz.keyId,\n        roles: {\n          proposer: ix.proposer.addr === authz.acct,\n          authorizer: true,\n          payer: get(ix, \"tx.payer\").acct === authz.acct,\n        },\n        interaction: ix,\n      })\n      return buildAuthorization(\n        authz.acct,\n        authzSignature.signature,\n        authz.keyId\n      )\n    }\n  )\n\n  ix.authz = await Promise.all(axs)\n\n  const transactionEnvelope = encodeTransactionEnvelope({\n    script: ix.payload.code,\n    refBlock: ix.payload.ref,\n    gasLimit: ix.payload.limit,\n    proposalKey: {\n      address: ix.proposer.addr,\n      keyId: ix.proposer.keyId,\n      sequenceNum: ix.proposer.sequenceNum,\n    },\n    payer: get(ix, \"tx.payer\").acct,\n    authorizers: get(ix, \"tx.authorizations\").map(a => a.acct),\n    payloadSigs: ix.authz\n      .map(ax => {\n        if (ax.signature === null) return null\n        return {\n          address: ax.acct,\n          keyId: ax.keyId,\n          sig: ax.signature,\n        }\n      })\n      .filter(ps => ps !== null),\n  })\n\n  const payer = get(ix, \"tx.payer\")\n  const payerSignature = await payer.signFn({\n    message: transactionEnvelope,\n    addr: payer.acct,\n    keyId: payer.keyId,\n    roles: {\n      proposer: ix.proposer.addr === payer.acct,\n      authorizer: false,\n      payer: true,\n    },\n    interaction: ix,\n  })\n  ix.payer = buildAuthorization(\n    payer.acct,\n    payerSignature.signature,\n    payer.keyId\n  )\n\n  return Ok(ix)\n}\n","import {isTransaction, isScript, pipe, get, Ok, update} from \"@onflow/interaction\"\n\nfunction isFn(v) {\n  return typeof v === \"function\"\n}\n\nexport const resolveParams = pipe([\n  ix => {\n    if (!isTransaction(ix) && !isScript(ix)) return Ok(ix)\n    const code = get(ix, \"ix.code\")\n    ix.payload.code = isFn(code) ? code(get(ix, \"ix.params\", {})) : code\n    return Ok(ix)\n  }\n])\n"],"names":["build","fns","pipe","interaction","resolve","authorizations","ax","put","authorization","acct","signFn","keyId","getAccount","makeGetAccount","ix","Ok","getEvents","eventType","start","end","makeGetEvents","bounds","getLatestBlock","isSealed","makeGetLatestBlock","getTransactionStatus","txId","makeGetTransactionStatus","limit","payload","params","px","kv","filter","d","key","reduce","acc","value","identity","asParam","v","asInjection","param","xform","proposer","args","prop","addr","sequenceNum","proposalKey","payer","authz","ping","makePing","ref","script","makeScript","t7l","DEFAULT_SCRIPT_ACCOUNTS","nonce","Date","now","hammer","fallback","transaction","makeTransaction","update","resolveAuthorizations","isTransaction","transactionPayload","encodeTransactionPayload","code","refBlock","gasLimit","address","get","authorizers","map","a","axs","buildAuthorization","message","roles","authorizer","authzSignature","signature","Promise","all","transactionEnvelope","encodeTransactionEnvelope","payloadSigs","sig","ps","payerSignature","resolveParams","isScript"],"mappings":"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"}