{"version":3,"file":"sdk.js","sources":["../src/resolve/index.js","../src/build/params.js","../src/build/proposer.js","../src/build/transaction.js","../src/resolve/resolve-authorizations.js","../src/resolve/resolve-params.js","../src/build/authorizations.js","../src/build/index.js","../src/build/get-account.js","../src/build/get-events.js","../src/build/get-latest-block.js","../src/build/get-transaction-status.js","../src/build/limit.js","../src/build/payer.js","../src/build/ping.js","../src/build/ref.js","../src/build/script.js"],"sourcesContent":["import {pipe} from \"@onflow/interaction\"\n\nexport const resolve = pipe\n","import {pipe, put} from \"@onflow/interaction\"\n\nfunction toMap(kv = []) {\n  return kv\n    .filter(d => d.key != null)\n    .reduce((acc, d) => ({...acc, [d.key]: d.value}), {})\n}\n\nexport function params(px = []) {\n  return pipe([put(\"ix.params\", toMap(px))])\n}\n\nconst identity = {\n  asParam: v => v,\n  asInjection: v => v,\n}\n\nexport function param(value, xform = identity, key = null) {\n  return {key, value, xform}\n}\n","import {pipe, put, Ok} from \"@onflow/interaction\"\n\nexport async function proposer(...args) {\n  let prop = null\n  if (typeof args[0] === \"function\") prop = await args[0]()\n  if (typeof args[0] === \"object\") prop = args[0]\n  const [addr, keyId, sequenceNum] = args\n  return pipe([\n    ix => {\n      ix.proposer = prop || proposalKey(addr, keyId, sequenceNum)\n      return Ok(ix)\n    },\n  ])\n}\n\nfunction proposalKey(addr, keyId, sequenceNum) {\n  return {addr, keyId, sequenceNum}\n}\n","import {pipe, put, Ok, update, makeTransaction} from \"@onflow/interaction\"\nimport {t7l} from \"@qvvg/templar\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\n// NOTE: nonces are changing, this will work for\n//       the way the current emulator works\nfunction nonce() {\n  return Date.now()\n}\n\nfunction hammer(fallback) {\n  return function(value) {\n    return value == null ? fallback : value\n  }\n}\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.code\", t7l(...args)),\n    ix => {\n      ix.payload.limit = ix.payload.limit || DEFAULT_COMPUTE_LIMIT\n      ix.payload.nonce = ix.payload.nonce || nonce()\n      ix.payload.ref = ix.payload.ref || DEFUALT_REF\n      return Ok(ix)\n    },\n    update(\"tx.authorizations\", hammer(DEFAULT_SCRIPT_ACCOUNTS))\n  ])\n}\n","import {Ok, isTransaction, get} from \"@onflow/interaction\"\nimport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n} from \"@onflow/encode\"\n\nconst ERROR_MINIMUM_AUTHORIZATIONS =\n  \"Transactions require at least one authoriztion\"\n\nfunction buildAuthorization(acct, signature, keyId) {\n  return {acct, signature, keyId}\n}\n\nfunction isFn(v) {\n  return typeof v === \"function\"\n}\n\nfunction isArray(v) {\n  return Array.isArray(v)\n}\n\nexport async function resolveAuthorizations(ix) {\n  if (!isTransaction(ix)) return Ok(ix)\n\n  const transactionPayload = encodeTransactionPayload({\n    script: ix.payload.code,\n    refBlock: ix.payload.ref || null,\n    gasLimit: ix.payload.limit,\n    proposalKey: {\n      address: ix.proposer.addr,\n      keyId: ix.proposer.keyId,\n      sequenceNum: ix.proposer.sequenceNum,\n    },\n    payer: get(ix, \"tx.payer\").acct,\n    authorizers: get(ix, \"tx.authorizations\").map(a => a.acct),\n  })\n\n  const axs = get(ix, \"tx.authorizations\", []).map(\n    async function resolveAuthorization(authz) {\n      if (isFn(authz)) authz = await authz()\n      if (authz.acct === get(ix, \"tx.payer\").acct)\n        return buildAuthorization(authz.acct, null, authz.keyId)\n      const authzSignature = await authz.signFn({\n        message: transactionPayload,\n        addr: authz.acct,\n        keyId: authz.keyId,\n        roles: {\n          proposer: ix.proposer.addr === authz.acct,\n          authorizer: true,\n          payer: get(ix, \"tx.payer\").acct === authz.acct,\n        },\n        interaction: ix,\n      })\n      return buildAuthorization(\n        authz.acct,\n        authzSignature.signature,\n        authz.keyId\n      )\n    }\n  )\n\n  ix.authz = await Promise.all(axs)\n\n  const transactionEnvelope = encodeTransactionEnvelope({\n    script: ix.payload.code,\n    refBlock: ix.payload.ref,\n    gasLimit: ix.payload.limit,\n    proposalKey: {\n      address: ix.proposer.addr,\n      keyId: ix.proposer.keyId,\n      sequenceNum: ix.proposer.sequenceNum,\n    },\n    payer: get(ix, \"tx.payer\").acct,\n    authorizers: get(ix, \"tx.authorizations\").map(a => a.acct),\n    payloadSigs: ix.authz\n      .map(ax => {\n        if (ax.signature === null) return null\n        return {\n          address: ax.acct,\n          keyId: ax.keyId,\n          sig: ax.signature,\n        }\n      })\n      .filter(ps => ps !== null),\n  })\n\n  const payer = get(ix, \"tx.payer\")\n  const payerSignature = await payer.signFn({\n    message: transactionEnvelope,\n    addr: payer.acct,\n    keyId: payer.keyId,\n    roles: {\n      proposer: ix.proposer.addr === payer.acct,\n      authorizer: false,\n      payer: true,\n    },\n    interaction: ix,\n  })\n  ix.payer = buildAuthorization(\n    payer.acct,\n    payerSignature.signature,\n    payer.keyId\n  )\n\n  return Ok(ix)\n}\n","import {isTransaction, isScript, pipe, get, Ok, update} from \"@onflow/interaction\"\n\nfunction isFn(v) {\n  return typeof v === \"function\"\n}\n\nexport const resolveParams = pipe([\n  ix => {\n    if (!isTransaction(ix) && !isScript(ix)) return Ok(ix)\n    const code = get(ix, \"ix.code\")\n    ix.payload.code = isFn(code) ? code(get(ix, \"ix.params\", {})) : code\n    return Ok(ix)\n  }\n])\n","import {pipe, put} from \"@onflow/interaction\"\n\nexport function authorizations(ax = []) {\n  return pipe([put(\"tx.authorizations\", ax)])\n}\n\nexport function authorization(acct, signFn, keyId) {\n  return {acct, signFn, keyId}\n}\n","import {pipe, interaction} from \"@onflow/interaction\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","import {pipe, makeGetAccount, Ok} from \"@onflow/interaction\"\n\nexport function getAccount(acct) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.acct = acct\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"@onflow/interaction\"\n\nexport function getEvents(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.eventType = eventType\n      return Ok(ix)\n    },\n    ix => {\n      ix.bounds.start = start\n      return Ok(ix)\n    },\n    ix => {\n      ix.bounds.end = end\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"@onflow/interaction\"\n\nexport function getLatestBlock(isSealed = false) {\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"@onflow/interaction\"\n\nexport function getTransactionStatus(txId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.txId = txId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok} from \"@onflow/interaction\"\n\nexport function limit(limit) {\n  return pipe([\n    ix => {\n      ix.payload.limit = limit\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, put} from \"@onflow/interaction\"\n\nexport function payer(authz) {\n  return pipe([\n    put(\"tx.payer\", authz)\n  ])\n}\n","import {pipe, makePing} from \"@onflow/interaction\"\n\nexport function ping() {\n  return pipe([makePing])\n}\n","import {pipe, Ok} from \"@onflow/interaction\"\n\nexport function ref(ref) {\n  return pipe([\n    ix => {\n      ix.payload.ref = ref\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"@onflow/interaction\"\nimport {t7l} from \"@qvvg/templar\"\n\nexport function script(...args) {\n  return pipe([makeScript,\n    put(\"ix.code\", t7l(...args)),\n  ])\n}\n"],"names":["resolve","pipe","identity","asParam","v","asInjection","proposalKey","addr","keyId","sequenceNum","DEFAULT_SCRIPT_ACCOUNTS","nonce","Date","now","hammer","fallback","value","buildAuthorization","acct","signature","resolveParams","ix","isTransaction","isScript","Ok","code","get","payload","signFn","ax","put","fns","interaction","makeGetAccount","eventType","start","end","makeGetEvents","bounds","isSealed","makeGetLatestBlock","txId","makeGetTransactionStatus","limit","xform","key","px","kv","filter","d","reduce","acc","authz","makePing","args","prop","proposer","ref","transactionPayload","encodeTransactionPayload","script","refBlock","gasLimit","address","payer","authorizers","map","a","axs","message","roles","authorizer","authzSignature","Promise","all","transactionEnvelope","encodeTransactionEnvelope","payloadSigs","sig","ps","payerSignature","makeScript","t7l","makeTransaction","update"],"mappings":"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"}